[
  {
    "objectID": "tests.html",
    "href": "tests.html",
    "title": "Pruebas de aleatoriedad",
    "section": "",
    "text": "Aqui vamos a poner la documentacion del modulo tests\n\nmean_test(sample)\n\nFalse"
  },
  {
    "objectID": "reference/utilities.HistogramFigure.html",
    "href": "reference/utilities.HistogramFigure.html",
    "title": "utilities.HistogramFigure",
    "section": "",
    "text": "utilities.HistogramFigure\nutilities.HistogramFigure(sample, function=None, bins=10, label='', **kwargs)\nfunction to create a density histogram with or without a density function"
  },
  {
    "objectID": "reference/tests.variance_test.html",
    "href": "reference/tests.variance_test.html",
    "title": "tests.variance_test",
    "section": "",
    "text": "tests.variance_test\ntests.variance_test(sample, sig=0.95)",
    "crumbs": [
      "Get started",
      "Randomess Test",
      "`variance test`"
    ]
  },
  {
    "objectID": "reference/tests.series_test.html",
    "href": "reference/tests.series_test.html",
    "title": "tests.series_test",
    "section": "",
    "text": "tests.series_test\ntests.series_test(sample, l, d, sig=0.95)"
  },
  {
    "objectID": "reference/tests.runs_test.html",
    "href": "reference/tests.runs_test.html",
    "title": "tests.runs_test",
    "section": "",
    "text": "tests.runs_test\ntests.runs_test(sample, sig=0.95)"
  },
  {
    "objectID": "reference/tests.mean_test.html",
    "href": "reference/tests.mean_test.html",
    "title": "tests.mean_test",
    "section": "",
    "text": "tests.mean_test\ntests.mean_test(sample, sig=0.95)",
    "crumbs": [
      "Get started",
      "Randomess Test",
      "`mean test`"
    ]
  },
  {
    "objectID": "reference/tests.chisq_test.html",
    "href": "reference/tests.chisq_test.html",
    "title": "tests.chisq_test",
    "section": "",
    "text": "tests.chisq_test\ntests.chisq_test(sample, k, sig=0.95)"
  },
  {
    "objectID": "reference/set_seed.html",
    "href": "reference/set_seed.html",
    "title": "set_seed",
    "section": "",
    "text": "set_seed(seed)\nChange state of default pseudorandom generator.\nThis functions allows to set the state of the default pseudorandom generator for reproductibility porpuses. If seed is not an integer it raise a Warning and no change is done.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nseed\nint\ninteger used to restart the default pseudorandom generator\nrequired"
  },
  {
    "objectID": "reference/set_seed.html#parameters",
    "href": "reference/set_seed.html#parameters",
    "title": "set_seed",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nseed\nint\ninteger used to restart the default pseudorandom generator\nrequired"
  },
  {
    "objectID": "reference/mass_function.html",
    "href": "reference/mass_function.html",
    "title": "mass_function",
    "section": "",
    "text": "mass_function\nmass_function(self, f)\nfuncion de masa"
  },
  {
    "objectID": "reference/HistogramFigure.html",
    "href": "reference/HistogramFigure.html",
    "title": "HistogramFigure",
    "section": "",
    "text": "HistogramFigure\nHistogramFigure(sample, function=None, bins=10, **kwargs)\nfunction to create a density histogram with or without a density function"
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html",
    "href": "reference/generators.polynomial_congruential_generator.html",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "generators.polynomial_congruential_generator(self, **kwargs)\nPolynomial congruential pseudorandom generator.\nPseudorandom generator based on the method to generate pseudorandom numbers. Initialization must be made with keywords for all parameters.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmults\nint\nMultipliers\nrequired\n\n\nseeds\nint\ninitial values, the flast element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.polynomial_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html#other-parameters",
    "href": "reference/generators.polynomial_congruential_generator.html#other-parameters",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmults\nint\nMultipliers\nrequired\n\n\nseeds\nint\ninitial values, the flast element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html#methods",
    "href": "reference/generators.polynomial_congruential_generator.html#methods",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.polynomial_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html",
    "href": "reference/generators.multiple_congruential_generator.html",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "generators.multiple_congruential_generator(self, **kwargs)\nMultiple congruential pseudorandom generator\nPseudorandom generator based on the multiple multiplicative congruential generator.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiple_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html#other-parameters",
    "href": "reference/generators.multiple_congruential_generator.html#other-parameters",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html#methods",
    "href": "reference/generators.multiple_congruential_generator.html#methods",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiple_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_8.html",
    "href": "reference/generators.linear_feedback_shift_register_8.html",
    "title": "generators.linear_feedback_shift_register_8",
    "section": "",
    "text": "generators.linear_feedback_shift_register_8(self, **kwargs)\nlinear fedbacl shift register for word size 8\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_8.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_8.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_8.html#methods",
    "title": "generators.linear_feedback_shift_register_8",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_8.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_24.html",
    "href": "reference/generators.linear_feedback_shift_register_24.html",
    "title": "generators.linear_feedback_shift_register_24",
    "section": "",
    "text": "generators.linear_feedback_shift_register_24(self, **kwargs)\nlinear fedbacl shift register for word size 24\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_24.rand()\ngeneration of one pseudo random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_24.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_24.html#methods",
    "title": "generators.linear_feedback_shift_register_24",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_24.rand()\ngeneration of one pseudo random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_16.html",
    "href": "reference/generators.linear_feedback_shift_register_16.html",
    "title": "generators.linear_feedback_shift_register_16",
    "section": "",
    "text": "generators.linear_feedback_shift_register_16(self, **kwargs)\nlinear fedback shift register for word size 16\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_16.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_16.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_16.html#methods",
    "title": "generators.linear_feedback_shift_register_16",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_16.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html",
    "href": "reference/generators.linear_congruential_generator.html",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "generators.linear_congruential_generator(self, **kwargs)\nLinear congruential pseudorandom generator.\nPseudorandom generator based on the linear congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\ncte\nint\naditive constant\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html#other-parameters",
    "href": "reference/generators.linear_congruential_generator.html#other-parameters",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\ncte\nint\naditive constant\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html#methods",
    "href": "reference/generators.linear_congruential_generator.html#methods",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/density_function.html",
    "href": "reference/density_function.html",
    "title": "density_function",
    "section": "",
    "text": "density_function\ndensity_function(self, function, min=None, max=None)\nfuncion de densidad"
  },
  {
    "objectID": "get_started.html",
    "href": "get_started.html",
    "title": "Guia rápida",
    "section": "",
    "text": "Aqui vamos a poner una guia rápida."
  },
  {
    "objectID": "get_started.html#primeros-pasos",
    "href": "get_started.html#primeros-pasos",
    "title": "Guia rápida",
    "section": "Primeros pasos",
    "text": "Primeros pasos\nLos módulos descritos son independientes, por lo que es necesario importarlos de forma independiente. Por ejemplo, para recrear el infame PRNG RANDU del lenguaje Basic utilizariamos\n\nimport sim_2024.generators as generators\nRANDU = generators.multiplicative_congruential_generator(mod=2**31,mult=65539,seed=14501)\n\nCualquier generador pseudoaleatorio creado mediante uno de los constructores definidos posee dos métodos: rand y sample. El método rand se utiliza para obtener un número pseudoaleatorio, mientras que sample se emplea cuando se desea obtener una lista de números pseudoaleatorios."
  },
  {
    "objectID": "get_started.html#segundos-pasos",
    "href": "get_started.html#segundos-pasos",
    "title": "Guia rápida",
    "section": "Segundos pasos",
    "text": "Segundos pasos\nY luego mas cosas así"
  },
  {
    "objectID": "generators.html",
    "href": "generators.html",
    "title": "Generadores pseudoaleatorios",
    "section": "",
    "text": "Aqui vamos a poner cosas sobre el apartado de generadores\n\nRANDU = multiplicative_congruential_generator(mod=2**31,mult=65539,seed=14501)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sim_2024 ",
    "section": "",
    "text": "El paquete sim_2024 es un paquete básico de simulación estocástica construido dentro del curso Simulación Estocástica que se impartio en el periodo agosto-noviembre de 2024 en el programa de Acturía de la Universidad La Salle México."
  },
  {
    "objectID": "index.html#contenido",
    "href": "index.html#contenido",
    "title": "sim_2024 ",
    "section": "Contenido",
    "text": "Contenido\nEste paquete contiene los siguientes modulos\n\ngenerators: aqui se implementan algunos generadores de números pseudoaleatorios (PRNG por sus siglas en ingles) simples. Ninguno de estos generadores tiene la intención de ser utilizado más que con fines didácticos.\ntests: en este módulo se implementan algunas pruebas empíricas de aleatoriedad que son aplicables a los PRNG contenidos en el módulo generators así como una batería de pruebas para facilitar el análisis de muestras.\nvariates: este modulo contiene representaciones de las variables aleatorias más utilizadas en el contexto actuarial. Esto inclute distribuciones discretas y continuas univariadas, así como las distribuciónes mutinormal y multinomial como únicos ejemplos de distribuciones multivariadas.\nprocesses: aqui se han implementado representaciones del proceso de Wiener, del proceso de Poisson homogeneo y del proceso de Poisson no-homogeneo de tasa acotada.\n\nEn toda el paquete se utilizan las definiciones y la terminología estandar de probabilidad y estadística. Para cualquier referencia sugerimos consultar la página Wikipedia."
  },
  {
    "objectID": "index.html#autor",
    "href": "index.html#autor",
    "title": "sim_2024 ",
    "section": "Autor",
    "text": "Autor\n\nHéctor Hugo Corrales Sánchez, hhcorrales@gmail.com."
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html",
    "href": "reference/generators.combined_congruential_generator.html",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "generators.combined_congruential_generator(self, **kwargs)\nCombined congruential pseudorandom generator.\nPseudorandom generator based on the multiple multiplicative congruential generator.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.combined_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html#other-parameters",
    "href": "reference/generators.combined_congruential_generator.html#other-parameters",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html#methods",
    "href": "reference/generators.combined_congruential_generator.html#methods",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.combined_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_12.html",
    "href": "reference/generators.linear_feedback_shift_register_12.html",
    "title": "generators.linear_feedback_shift_register_12",
    "section": "",
    "text": "generators.linear_feedback_shift_register_12(self, **kwargs)\nlinear fedbacl shift register for word size 12\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_12.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_12.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_12.html#methods",
    "title": "generators.linear_feedback_shift_register_12",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_12.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_20.html",
    "href": "reference/generators.linear_feedback_shift_register_20.html",
    "title": "generators.linear_feedback_shift_register_20",
    "section": "",
    "text": "generators.linear_feedback_shift_register_20(self, **kwargs)\nlinear fedbacl shift register for word size 20\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_20.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_20.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_20.html#methods",
    "title": "generators.linear_feedback_shift_register_20",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_20.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_4.html",
    "href": "reference/generators.linear_feedback_shift_register_4.html",
    "title": "generators.linear_feedback_shift_register_4",
    "section": "",
    "text": "generators.linear_feedback_shift_register_4(self, **kwargs)\nlinear fedbacl shift register for word size 4\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_4.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_4.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_4.html#methods",
    "title": "generators.linear_feedback_shift_register_4",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_4.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html",
    "href": "reference/generators.multcombi_congruential_generator.html",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "generators.multcombi_congruential_generator(self, **kwargs)\nMultiple combined congruential pseudorandom generator\nPseudorandom generator based on the multiple combined congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmods\nlist[int]\narray of 2 positive integers, both to be used as modules\nrequired\n\n\nmults\nlist[int]\narray of 2m integers used as multipliers, the sequence is splited in two array of the same length\nrequired\n\n\nseeds\nlist[int]\narray of 2m integers used as seeds, the sequence is splited in two array of the same length\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudorandom number\n\n\n\n\n\ngenerators.multcombi_congruential_generator.rand()\ngeneration of one pseudorandom number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html#other-parameters",
    "href": "reference/generators.multcombi_congruential_generator.html#other-parameters",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmods\nlist[int]\narray of 2 positive integers, both to be used as modules\nrequired\n\n\nmults\nlist[int]\narray of 2m integers used as multipliers, the sequence is splited in two array of the same length\nrequired\n\n\nseeds\nlist[int]\narray of 2m integers used as seeds, the sequence is splited in two array of the same length\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html#methods",
    "href": "reference/generators.multcombi_congruential_generator.html#methods",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudorandom number\n\n\n\n\n\ngenerators.multcombi_congruential_generator.rand()\ngeneration of one pseudorandom number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html",
    "href": "reference/generators.multiplicative_congruential_generator.html",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "generators.multiplicative_congruential_generator(self, **kwargs)\nMultiplicative congruential pseudorandom generator.\nPseudorandom generator based on the multiplicative congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiplicative_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html#other-parameters",
    "href": "reference/generators.multiplicative_congruential_generator.html#other-parameters",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html#methods",
    "href": "reference/generators.multiplicative_congruential_generator.html#methods",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiplicative_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html",
    "href": "reference/generators.quadratic_congrential_generator.html",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "generators.quadratic_congrential_generator(self, **kwargs)\nQuadratic congruential pseudorandom generators.\nPseudorandom generator based on the quadr�tic congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.quadratic_congrential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html#other-parameters",
    "href": "reference/generators.quadratic_congrential_generator.html#other-parameters",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial value\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html#methods",
    "href": "reference/generators.quadratic_congrential_generator.html#methods",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.quadratic_congrential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "sim_2024",
    "section": "",
    "text": "funcionalidades básicas\n\n\n\nrand\n\n\n\nset_seed\nChange state of default pseudorandom generator.\n\n\n\n\n\n\nherramientas de probabilidad y estadística\n\n\n\nutilities.mass_function\nfuncion de masa\n\n\nutilities.density_function\nfuncion de densidad\n\n\nutilities.HistogramFigure\nfunction to create a density histogram with or without a density function\n\n\n\n\n\n\nsubmodulo de generadores de números pseudoaleatorios\n\n\n\ngenerators.multiplicative_congruential_generator\nMultiplicative congruential pseudorandom generator.\n\n\ngenerators.linear_congruential_generator\nLinear congruential pseudorandom generator.\n\n\ngenerators.quadratic_congrential_generator\nQuadratic congruential pseudorandom generators.\n\n\ngenerators.polynomial_congruential_generator\nPolynomial congruential pseudorandom generator.\n\n\ngenerators.multiple_congruential_generator\nMultiple congruential pseudorandom generator\n\n\ngenerators.combined_congruential_generator\nCombined congruential pseudorandom generator.\n\n\ngenerators.multcombi_congruential_generator\nMultiple combined congruential pseudorandom generator\n\n\ngenerators.linear_feedback_shift_register_4\nlinear fedbacl shift register for word size 4\n\n\ngenerators.linear_feedback_shift_register_8\nlinear fedbacl shift register for word size 8\n\n\ngenerators.linear_feedback_shift_register_12\nlinear fedbacl shift register for word size 12\n\n\ngenerators.linear_feedback_shift_register_16\nlinear fedback shift register for word size 16\n\n\ngenerators.linear_feedback_shift_register_20\nlinear fedbacl shift register for word size 20\n\n\ngenerators.linear_feedback_shift_register_24\nlinear fedbacl shift register for word size 24\n\n\n\n\n\n\nsubmodulo de pruebas de aleatoriedad para PRNG\n\n\n\ntests.mean_est\n\n\n\ntests.mean_test\n\n\n\ntests.variance_est\n\n\n\ntests.variance_test\n\n\n\ntests.chisq_est\n\n\n\ntests.chisq_test\n\n\n\ntests.series_est\n\n\n\ntests.series_test\n\n\n\ntests.runs_est\n\n\n\ntests.runs_test"
  },
  {
    "objectID": "reference/index.html#basics-pseudorandom-functionalities",
    "href": "reference/index.html#basics-pseudorandom-functionalities",
    "title": "sim_2024",
    "section": "",
    "text": "funcionalidades básicas\n\n\n\nrand\n\n\n\nset_seed\nChange state of default pseudorandom generator."
  },
  {
    "objectID": "reference/index.html#probability-and-statistics-tools",
    "href": "reference/index.html#probability-and-statistics-tools",
    "title": "sim_2024",
    "section": "",
    "text": "herramientas de probabilidad y estadística\n\n\n\nutilities.mass_function\nfuncion de masa\n\n\nutilities.density_function\nfuncion de densidad\n\n\nutilities.HistogramFigure\nfunction to create a density histogram with or without a density function"
  },
  {
    "objectID": "reference/index.html#pseudorandom-number-generators-prng",
    "href": "reference/index.html#pseudorandom-number-generators-prng",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de generadores de números pseudoaleatorios\n\n\n\ngenerators.multiplicative_congruential_generator\nMultiplicative congruential pseudorandom generator.\n\n\ngenerators.linear_congruential_generator\nLinear congruential pseudorandom generator.\n\n\ngenerators.quadratic_congrential_generator\nQuadratic congruential pseudorandom generators.\n\n\ngenerators.polynomial_congruential_generator\nPolynomial congruential pseudorandom generator.\n\n\ngenerators.multiple_congruential_generator\nMultiple congruential pseudorandom generator\n\n\ngenerators.combined_congruential_generator\nCombined congruential pseudorandom generator.\n\n\ngenerators.multcombi_congruential_generator\nMultiple combined congruential pseudorandom generator\n\n\ngenerators.linear_feedback_shift_register_4\nlinear fedbacl shift register for word size 4\n\n\ngenerators.linear_feedback_shift_register_8\nlinear fedbacl shift register for word size 8\n\n\ngenerators.linear_feedback_shift_register_12\nlinear fedbacl shift register for word size 12\n\n\ngenerators.linear_feedback_shift_register_16\nlinear fedback shift register for word size 16\n\n\ngenerators.linear_feedback_shift_register_20\nlinear fedbacl shift register for word size 20\n\n\ngenerators.linear_feedback_shift_register_24\nlinear fedbacl shift register for word size 24"
  },
  {
    "objectID": "reference/index.html#pruebas-de-aleatoriedad",
    "href": "reference/index.html#pruebas-de-aleatoriedad",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de pruebas de aleatoriedad para PRNG\n\n\n\ntests.mean_est\n\n\n\ntests.mean_test\n\n\n\ntests.variance_est\n\n\n\ntests.variance_test\n\n\n\ntests.chisq_est\n\n\n\ntests.chisq_test\n\n\n\ntests.series_est\n\n\n\ntests.series_test\n\n\n\ntests.runs_est\n\n\n\ntests.runs_test"
  },
  {
    "objectID": "reference/rand.html",
    "href": "reference/rand.html",
    "title": "rand",
    "section": "",
    "text": "rand\nrand"
  },
  {
    "objectID": "reference/tests.chisq_est.html",
    "href": "reference/tests.chisq_est.html",
    "title": "tests.chisq_est",
    "section": "",
    "text": "tests.chisq_est\ntests.chisq_est(sample, k)"
  },
  {
    "objectID": "reference/tests.mean_est.html",
    "href": "reference/tests.mean_est.html",
    "title": "tests.mean_est",
    "section": "",
    "text": "tests.mean_est\ntests.mean_est(sample)"
  },
  {
    "objectID": "reference/tests.runs_est.html",
    "href": "reference/tests.runs_est.html",
    "title": "tests.runs_est",
    "section": "",
    "text": "tests.runs_est\ntests.runs_est(sample)"
  },
  {
    "objectID": "reference/tests.series_est.html",
    "href": "reference/tests.series_est.html",
    "title": "tests.series_est",
    "section": "",
    "text": "tests.series_est\ntests.series_est(sample, l, d)"
  },
  {
    "objectID": "reference/tests.variance_est.html",
    "href": "reference/tests.variance_est.html",
    "title": "tests.variance_est",
    "section": "",
    "text": "tests.variance_est\ntests.variance_est(sample)"
  },
  {
    "objectID": "reference/utilities.density_function.html",
    "href": "reference/utilities.density_function.html",
    "title": "utilities.density_function",
    "section": "",
    "text": "utilities.density_function\nutilities.density_function(self, function, min=None, max=None)\nfuncion de densidad"
  },
  {
    "objectID": "reference/utilities.mass_function.html",
    "href": "reference/utilities.mass_function.html",
    "title": "utilities.mass_function",
    "section": "",
    "text": "utilities.mass_function\nutilities.mass_function(self, function, sup)\nfuncion de masa"
  }
]
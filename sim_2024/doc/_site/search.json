[
  {
    "objectID": "tests.html",
    "href": "tests.html",
    "title": "Pruebas de aleatoriedad",
    "section": "",
    "text": "Aqui vamos a poner la documentacion del modulo tests\n\nmean_test(sample)\n\nFalse"
  },
  {
    "objectID": "reference/variates.RectifiedNormal.html",
    "href": "reference/variates.RectifiedNormal.html",
    "title": "variates.RectifiedNormal",
    "section": "",
    "text": "variates.RectifiedNormal\nvariates.RectifiedNormal(self)\nRectified normal distribution"
  },
  {
    "objectID": "reference/variates.Normal.html",
    "href": "reference/variates.Normal.html",
    "title": "variates.Normal",
    "section": "",
    "text": "variates.Normal(self, **kwargs)\nNormal distribution\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmean\nfloat\nmean parameter\nrequired\n\n\nvar\nfloat\nvariance parameter\nrequired\n\n\nstdev\nfloat\nstandar deviation parameter\nrequired"
  },
  {
    "objectID": "reference/variates.Normal.html#other-parameters",
    "href": "reference/variates.Normal.html#other-parameters",
    "title": "variates.Normal",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmean\nfloat\nmean parameter\nrequired\n\n\nvar\nfloat\nvariance parameter\nrequired\n\n\nstdev\nfloat\nstandar deviation parameter\nrequired"
  },
  {
    "objectID": "reference/variates.Geometric.html",
    "href": "reference/variates.Geometric.html",
    "title": "variates.Geometric",
    "section": "",
    "text": "variates.Geometric(self, **kwargs)\nRepresentation of a random variate of Bernoulli type\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/variates.Geometric.html#other-parameters",
    "href": "reference/variates.Geometric.html#other-parameters",
    "title": "variates.Geometric",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/variates.Exponential.html",
    "href": "reference/variates.Exponential.html",
    "title": "variates.Exponential",
    "section": "",
    "text": "variates.Exponential(self, **kwargs)\nExponential distribution.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nrate\nfloat\nrate parameter\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.Exponential.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.Exponential.html#other-parameters",
    "href": "reference/variates.Exponential.html#other-parameters",
    "title": "variates.Exponential",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nrate\nfloat\nrate parameter\nrequired"
  },
  {
    "objectID": "reference/variates.Exponential.html#methods",
    "href": "reference/variates.Exponential.html#methods",
    "title": "variates.Exponential",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.Exponential.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.DiscreteUniform.html",
    "href": "reference/variates.DiscreteUniform.html",
    "title": "variates.DiscreteUniform",
    "section": "",
    "text": "variates.DiscreteUniform(self, **kwargs)\nDiscrete uniform distribution.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsize\nint\nif provided, the class will represenr Discrete distribution on inetegers 1,2,…,size.\nrequired\n\n\nsup\nlist[float]\nif provided, the class will represent Discrete distribution on the set {members of list}.\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.DiscreteUniform.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.DiscreteUniform.html#other-parameters",
    "href": "reference/variates.DiscreteUniform.html#other-parameters",
    "title": "variates.DiscreteUniform",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nsize\nint\nif provided, the class will represenr Discrete distribution on inetegers 1,2,…,size.\nrequired\n\n\nsup\nlist[float]\nif provided, the class will represent Discrete distribution on the set {members of list}.\nrequired"
  },
  {
    "objectID": "reference/variates.DiscreteUniform.html#methods",
    "href": "reference/variates.DiscreteUniform.html#methods",
    "title": "variates.DiscreteUniform",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.DiscreteUniform.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.Chisq.html",
    "href": "reference/variates.Chisq.html",
    "title": "variates.Chisq",
    "section": "",
    "text": "variates.Chisq\nvariates.Chisq(self, **kwargs)"
  },
  {
    "objectID": "reference/variates.Binomial.html",
    "href": "reference/variates.Binomial.html",
    "title": "variates.Binomial",
    "section": "",
    "text": "variates.Binomial(self, **kwargs)\nrepresentation of a random variate of binonimal type\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired\n\n\nn\nint\nNumber of trials\nrequired"
  },
  {
    "objectID": "reference/variates.Binomial.html#other-parameters",
    "href": "reference/variates.Binomial.html#other-parameters",
    "title": "variates.Binomial",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired\n\n\nn\nint\nNumber of trials\nrequired"
  },
  {
    "objectID": "reference/variates.Bernoulli.html",
    "href": "reference/variates.Bernoulli.html",
    "title": "variates.Bernoulli",
    "section": "",
    "text": "variates.Bernoulli(self, **kwargs)\nRepresentation of a random variate of Bernoulli type.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/variates.Bernoulli.html#other-parameters",
    "href": "reference/variates.Bernoulli.html#other-parameters",
    "title": "variates.Bernoulli",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/tests.variance_est.html",
    "href": "reference/tests.variance_est.html",
    "title": "tests.variance_est",
    "section": "",
    "text": "tests.variance_est\ntests.variance_est(sample)"
  },
  {
    "objectID": "reference/tests.series_est.html",
    "href": "reference/tests.series_est.html",
    "title": "tests.series_est",
    "section": "",
    "text": "tests.series_est\ntests.series_est(sample, l, d)"
  },
  {
    "objectID": "reference/tests.runs_est.html",
    "href": "reference/tests.runs_est.html",
    "title": "tests.runs_est",
    "section": "",
    "text": "tests.runs_est\ntests.runs_est(sample)"
  },
  {
    "objectID": "reference/tests.mean_est.html",
    "href": "reference/tests.mean_est.html",
    "title": "tests.mean_est",
    "section": "",
    "text": "tests.mean_est\ntests.mean_est(sample)"
  },
  {
    "objectID": "reference/tests.chisq_est.html",
    "href": "reference/tests.chisq_est.html",
    "title": "tests.chisq_est",
    "section": "",
    "text": "tests.chisq_est\ntests.chisq_est(sample, k)"
  },
  {
    "objectID": "reference/Sample.html",
    "href": "reference/Sample.html",
    "title": "Sample",
    "section": "",
    "text": "Sample\nSample()\ncustom type to store an array of float xor int values and some functionalities related\nSample has to porpuses. First, store a potentialy huge amount of numbers (either float or int)"
  },
  {
    "objectID": "reference/random_path.html",
    "href": "reference/random_path.html",
    "title": "random_path",
    "section": "",
    "text": "random_path\nrandom_path(self, times, events)"
  },
  {
    "objectID": "reference/process_sample.html",
    "href": "reference/process_sample.html",
    "title": "process_sample",
    "section": "",
    "text": "process_sample(self, paths)\nsample of process paths\nList of process paths and related functions. The process can be a continuous or jumps process but is assumed to be of in continum time. Attribute _paths must be a list of process_path elements, each one is a realization of a process.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npaths\nlist[random_paths]\nlist of random_paths\nrequired"
  },
  {
    "objectID": "reference/process_sample.html#parameters",
    "href": "reference/process_sample.html#parameters",
    "title": "process_sample",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\npaths\nlist[random_paths]\nlist of random_paths\nrequired"
  },
  {
    "objectID": "reference/process.WienerProcess.html",
    "href": "reference/process.WienerProcess.html",
    "title": "process.WienerProcess",
    "section": "",
    "text": "process.WienerProcess\nprocess.WienerProcess(self)\nStandar Wiener process",
    "crumbs": [
      "Get started",
      "Stochastic process",
      "`Wiener Process`"
    ]
  },
  {
    "objectID": "reference/process.CompundPoissonProcess.html",
    "href": "reference/process.CompundPoissonProcess.html",
    "title": "process.CompundPoissonProcess",
    "section": "",
    "text": "process.CompundPoissonProcess\nprocess.CompundPoissonProcess(self, **kwargs)\nHomogeneous Poisson process",
    "crumbs": [
      "Get started",
      "Stochastic process",
      "`Compound Poisson Process`"
    ]
  },
  {
    "objectID": "reference/mass_function.html",
    "href": "reference/mass_function.html",
    "title": "mass_function",
    "section": "",
    "text": "mass_function\nmass_function(self, function, sup)\nfuncion de masa",
    "crumbs": [
      "Get started",
      "Main features",
      "`mass_function`"
    ]
  },
  {
    "objectID": "reference/HistogramFigure.html",
    "href": "reference/HistogramFigure.html",
    "title": "HistogramFigure",
    "section": "",
    "text": "HistogramFigure(self, sample, **kwargs)\ncustom matplotlib Figure to plot a density histogram\nThis custom figure allows to create a histogram of a sample of float values in a pre-defined format. args and Keyword arguments are passed to figure inizialization and to histogram creation.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsample\nrandom_sample\nrandom_sample to plot\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`HistogramFigure`"
    ]
  },
  {
    "objectID": "reference/HistogramFigure.html#parameters",
    "href": "reference/HistogramFigure.html#parameters",
    "title": "HistogramFigure",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nsample\nrandom_sample\nrandom_sample to plot\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`HistogramFigure`"
    ]
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html",
    "href": "reference/generators.polynomial_congruential_generator.html",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "generators.polynomial_congruential_generator(self, **kwargs)\nPolynomial congruential pseudorandom generator.\nPseudorandom generator based on the method to generate pseudorandom numbers. Initialization must be made with keywords for all parameters.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmults\nint\nMultipliers\nrequired\n\n\nseeds\nint\ninitial values, the flast element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.polynomial_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html#other-parameters",
    "href": "reference/generators.polynomial_congruential_generator.html#other-parameters",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmults\nint\nMultipliers\nrequired\n\n\nseeds\nint\ninitial values, the flast element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.polynomial_congruential_generator.html#methods",
    "href": "reference/generators.polynomial_congruential_generator.html#methods",
    "title": "generators.polynomial_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.polynomial_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`polynomial_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html",
    "href": "reference/generators.multiple_congruential_generator.html",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "generators.multiple_congruential_generator(self, **kwargs)\nMultiple congruential pseudorandom generator\nPseudorandom generator based on the multiple multiplicative congruential generator.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiple_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html#other-parameters",
    "href": "reference/generators.multiple_congruential_generator.html#other-parameters",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiple_congruential_generator.html#methods",
    "href": "reference/generators.multiple_congruential_generator.html#methods",
    "title": "generators.multiple_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiple_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiple_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_8.html",
    "href": "reference/generators.linear_feedback_shift_register_8.html",
    "title": "generators.linear_feedback_shift_register_8",
    "section": "",
    "text": "generators.linear_feedback_shift_register_8(self, **kwargs)\nlinear fedbacl shift register for word size 8\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_8.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_8.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_8.html#methods",
    "title": "generators.linear_feedback_shift_register_8",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_8.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_24.html",
    "href": "reference/generators.linear_feedback_shift_register_24.html",
    "title": "generators.linear_feedback_shift_register_24",
    "section": "",
    "text": "generators.linear_feedback_shift_register_24(self, **kwargs)\nlinear fedbacl shift register for word size 24\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_24.rand()\ngeneration of one pseudo random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_24.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_24.html#methods",
    "title": "generators.linear_feedback_shift_register_24",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_24.rand()\ngeneration of one pseudo random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_16.html",
    "href": "reference/generators.linear_feedback_shift_register_16.html",
    "title": "generators.linear_feedback_shift_register_16",
    "section": "",
    "text": "generators.linear_feedback_shift_register_16(self, **kwargs)\nlinear fedback shift register for word size 16\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_16.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_16.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_16.html#methods",
    "title": "generators.linear_feedback_shift_register_16",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_16.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html",
    "href": "reference/generators.linear_congruential_generator.html",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "generators.linear_congruential_generator(self, **kwargs)\nLinear congruential pseudorandom generator.\nPseudorandom generator based on the linear congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\ncte\nint\naditive constant\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html#other-parameters",
    "href": "reference/generators.linear_congruential_generator.html#other-parameters",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\ncte\nint\naditive constant\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_congruential_generator.html#methods",
    "href": "reference/generators.linear_congruential_generator.html#methods",
    "title": "generators.linear_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`linear_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/density_function.html",
    "href": "reference/density_function.html",
    "title": "density_function",
    "section": "",
    "text": "density_function(self, function, **kwargs)\nfuncion de densidad\nClase de abstracci�n de una funci�n de densidad de probabilidad.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nfunction\nCallable\nfuncti�n used to evaluate density_function between min and max args.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmin\nfloat\ndensity_functi�n evaluate to zero below min\nrequired\n\n\nmax\nfloat\ndensity_functi�n evaluate to zero above max\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`density_function`"
    ]
  },
  {
    "objectID": "reference/density_function.html#parameters",
    "href": "reference/density_function.html#parameters",
    "title": "density_function",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nfunction\nCallable\nfuncti�n used to evaluate density_function between min and max args.\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`density_function`"
    ]
  },
  {
    "objectID": "reference/density_function.html#other-parameters",
    "href": "reference/density_function.html#other-parameters",
    "title": "density_function",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmin\nfloat\ndensity_functi�n evaluate to zero below min\nrequired\n\n\nmax\nfloat\ndensity_functi�n evaluate to zero above max\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`density_function`"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sim_2024 ",
    "section": "",
    "text": "El paquete sim_2024 es un paquete básico de simulación estocástica construido dentro del curso Simulación Estocástica que se impartio en el periodo agosto-noviembre de 2024 en el programa de Acturía de la Universidad La Salle México."
  },
  {
    "objectID": "index.html#contenido",
    "href": "index.html#contenido",
    "title": "sim_2024 ",
    "section": "Contenido",
    "text": "Contenido\nEste paquete contiene los siguientes modulos\n\ngenerators: aqui se implementan algunos generadores de números pseudoaleatorios (PRNG por sus siglas en ingles) simples. Ninguno de estos generadores tiene la intención de ser utilizado más que con fines didácticos.\ntests: en este módulo se implementan algunas pruebas empíricas de aleatoriedad que son aplicables a los PRNG contenidos en el módulo generators así como una batería de pruebas para facilitar el análisis de muestras.\nvariates: este modulo contiene representaciones de las variables aleatorias más utilizadas en el contexto actuarial. Esto inclute distribuciones discretas y continuas univariadas, así como las distribuciónes mutinormal y multinomial como únicos ejemplos de distribuciones multivariadas.\nprocess: aqui se han implementado representaciones del proceso de Wiener, del proceso de Poisson homogeneo y del proceso de Poisson compuesto.\n\nEn toda el paquete se utilizan las definiciones y la terminología estandar de probabilidad y estadística. Para cualquier referencia sugerimos consultar la página Wikipedia."
  },
  {
    "objectID": "index.html#autor",
    "href": "index.html#autor",
    "title": "sim_2024 ",
    "section": "Autor",
    "text": "Autor\n\nHéctor Hugo Corrales Sánchez, hhcorrales@gmail.com."
  },
  {
    "objectID": "generators.html",
    "href": "generators.html",
    "title": "Pseudo Random Number Generators Module",
    "section": "",
    "text": "Generadores pseudoaleatorios\nAqui vamos a poner cosas sobre el apartado de generadores\n\nRANDU = multiplicative_congruential_generator(mod=2**31,mult=65539,seed=14501)"
  },
  {
    "objectID": "get_started.html",
    "href": "get_started.html",
    "title": "Guia rápida",
    "section": "",
    "text": "Aqui vamos a poner una guia rápida."
  },
  {
    "objectID": "get_started.html#primeros-pasos",
    "href": "get_started.html#primeros-pasos",
    "title": "Guia rápida",
    "section": "Primeros pasos",
    "text": "Primeros pasos\nLos módulos descritos son independientes, por lo que es necesario importarlos de forma independiente. Por ejemplo, para recrear el infame PRNG RANDU del lenguaje Basic utilizariamos\n\nimport sim_2024.generators as generators\nRANDU = generators.multiplicative_congruential_generator(mod=2**31,mult=65539,seed=14501)\n\nCualquier generador pseudoaleatorio creado mediante uno de los constructores definidos posee dos métodos: rand y sample. El método rand se utiliza para obtener un número pseudoaleatorio, mientras que sample se emplea cuando se desea obtener una lista de números pseudoaleatorios."
  },
  {
    "objectID": "get_started.html#segundos-pasos",
    "href": "get_started.html#segundos-pasos",
    "title": "Guia rápida",
    "section": "Segundos pasos",
    "text": "Segundos pasos\nY luego mas cosas así"
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html",
    "href": "reference/generators.combined_congruential_generator.html",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "generators.combined_congruential_generator(self, **kwargs)\nCombined congruential pseudorandom generator.\nPseudorandom generator based on the multiple multiplicative congruential generator.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.combined_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html#other-parameters",
    "href": "reference/generators.combined_congruential_generator.html#other-parameters",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial values, the last element on the list\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.combined_congruential_generator.html#methods",
    "href": "reference/generators.combined_congruential_generator.html#methods",
    "title": "generators.combined_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.combined_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`combined_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_12.html",
    "href": "reference/generators.linear_feedback_shift_register_12.html",
    "title": "generators.linear_feedback_shift_register_12",
    "section": "",
    "text": "generators.linear_feedback_shift_register_12(self, **kwargs)\nlinear fedbacl shift register for word size 12\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_12.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_12.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_12.html#methods",
    "title": "generators.linear_feedback_shift_register_12",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_12.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_20.html",
    "href": "reference/generators.linear_feedback_shift_register_20.html",
    "title": "generators.linear_feedback_shift_register_20",
    "section": "",
    "text": "generators.linear_feedback_shift_register_20(self, **kwargs)\nlinear fedbacl shift register for word size 20\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_20.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_20.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_20.html#methods",
    "title": "generators.linear_feedback_shift_register_20",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_20.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_4.html",
    "href": "reference/generators.linear_feedback_shift_register_4.html",
    "title": "generators.linear_feedback_shift_register_4",
    "section": "",
    "text": "generators.linear_feedback_shift_register_4(self, **kwargs)\nlinear fedbacl shift register for word size 4\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_4.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.linear_feedback_shift_register_4.html#methods",
    "href": "reference/generators.linear_feedback_shift_register_4.html#methods",
    "title": "generators.linear_feedback_shift_register_4",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.linear_feedback_shift_register_4.rand()\ngeneration of one pseudo-random number"
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html",
    "href": "reference/generators.multcombi_congruential_generator.html",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "generators.multcombi_congruential_generator(self, **kwargs)\nMultiple combined congruential pseudorandom generator\nPseudorandom generator based on the multiple combined congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmods\nlist[int]\narray of 2 positive integers, both to be used as modules\nrequired\n\n\nmults\nlist[int]\narray of 2m integers used as multipliers, the sequence is splited in two array of the same length\nrequired\n\n\nseeds\nlist[int]\narray of 2m integers used as seeds, the sequence is splited in two array of the same length\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudorandom number\n\n\n\n\n\ngenerators.multcombi_congruential_generator.rand()\ngeneration of one pseudorandom number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html#other-parameters",
    "href": "reference/generators.multcombi_congruential_generator.html#other-parameters",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmods\nlist[int]\narray of 2 positive integers, both to be used as modules\nrequired\n\n\nmults\nlist[int]\narray of 2m integers used as multipliers, the sequence is splited in two array of the same length\nrequired\n\n\nseeds\nlist[int]\narray of 2m integers used as seeds, the sequence is splited in two array of the same length\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multcombi_congruential_generator.html#methods",
    "href": "reference/generators.multcombi_congruential_generator.html#methods",
    "title": "generators.multcombi_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudorandom number\n\n\n\n\n\ngenerators.multcombi_congruential_generator.rand()\ngeneration of one pseudorandom number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multcombi_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html",
    "href": "reference/generators.multiplicative_congruential_generator.html",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "generators.multiplicative_congruential_generator(self, **kwargs)\nMultiplicative congruential pseudorandom generator.\nPseudorandom generator based on the multiplicative congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiplicative_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html#other-parameters",
    "href": "reference/generators.multiplicative_congruential_generator.html#other-parameters",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nmult\nint\nMultiplier\nrequired\n\n\nseed\nint\ninitial value\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.multiplicative_congruential_generator.html#methods",
    "href": "reference/generators.multiplicative_congruential_generator.html#methods",
    "title": "generators.multiplicative_congruential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.multiplicative_congruential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`multiplicative_congruential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html",
    "href": "reference/generators.quadratic_congrential_generator.html",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "generators.quadratic_congrential_generator(self, **kwargs)\nQuadratic congruential pseudorandom generators.\nPseudorandom generator based on the quadr�tic congruential method. Initialization must be made with keywords for all parameters.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial value\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.quadratic_congrential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html#other-parameters",
    "href": "reference/generators.quadratic_congrential_generator.html#other-parameters",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nmod\nint\nModule for residual reduction\nrequired\n\n\nseed\nint\ninitial value\nrequired",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/generators.quadratic_congrential_generator.html#methods",
    "href": "reference/generators.quadratic_congrential_generator.html#methods",
    "title": "generators.quadratic_congrential_generator",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one pseudo-random number\n\n\n\n\n\ngenerators.quadratic_congrential_generator.rand()\ngeneration of one pseudo-random number",
    "crumbs": [
      "Get started",
      "PseudoRandom Number Generators (PRNG)",
      "`quadratic_congrential_generator`"
    ]
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "sim_2024",
    "section": "",
    "text": "funcionalidades básicas\n\n\n\nrand\n\n\n\nset_seed\nChange state of default pseudorandom generator.\n\n\nrandom_sample\narray subclass to represent a realization of a random process\n\n\nHistogramFigure\ncustom matplotlib Figure to plot a density histogram\n\n\nprocess_path\nrealization of a random process\n\n\nprocess_sample\nsample of process paths\n\n\nPathFigure\ncustom matplotlib Figure to plot a realization from a random process\n\n\nmass_function\nfuncion de masa\n\n\ndensity_function\nfuncion de densidad\n\n\n\n\n\n\nsubmodulo de generadores de números pseudoaleatorios\n\n\n\ngenerators.multiplicative_congruential_generator\nMultiplicative congruential pseudorandom generator.\n\n\ngenerators.linear_congruential_generator\nLinear congruential pseudorandom generator.\n\n\ngenerators.quadratic_congrential_generator\nQuadratic congruential pseudorandom generators.\n\n\ngenerators.polynomial_congruential_generator\nPolynomial congruential pseudorandom generator.\n\n\ngenerators.multiple_congruential_generator\nMultiple congruential pseudorandom generator\n\n\ngenerators.combined_congruential_generator\nCombined congruential pseudorandom generator.\n\n\ngenerators.multcombi_congruential_generator\nMultiple combined congruential pseudorandom generator\n\n\ngenerators.linear_feedback_shift_register_4\nlinear fedbacl shift register for word size 4\n\n\ngenerators.linear_feedback_shift_register_8\nlinear fedbacl shift register for word size 8\n\n\ngenerators.linear_feedback_shift_register_12\nlinear fedbacl shift register for word size 12\n\n\ngenerators.linear_feedback_shift_register_16\nlinear fedback shift register for word size 16\n\n\ngenerators.linear_feedback_shift_register_20\nlinear fedbacl shift register for word size 20\n\n\ngenerators.linear_feedback_shift_register_24\nlinear fedbacl shift register for word size 24\n\n\n\n\n\n\nsubmodulo de pruebas de aleatoriedad para PRNG\n\n\n\ntests.mean_est\n\n\n\ntests.mean_test\n\n\n\ntests.variance_est\n\n\n\ntests.variance_test\n\n\n\ntests.chisq_est\n\n\n\ntests.chisq_test\n\n\n\ntests.series_est\n\n\n\ntests.series_test\n\n\n\ntests.runs_est\n\n\n\ntests.runs_test\n\n\n\n\n\n\n\nsubmodulo de distribuciones de probabilidad\n\n\n\nvariates.Bernoulli\nRepresentation of a random variate of Bernoulli type.\n\n\nvariates.Binomial\nrepresentation of a random variate of binonimal type\n\n\nvariates.Geometric\nRepresentation of a random variate of Bernoulli type\n\n\nvariates.NegativeBinomial\nrepresentation of a random variate of Bernoulli type\n\n\nvariates.DiscreteUniform\nDiscrete uniform distribution.\n\n\nvariates.Poisson\nPoisson distribution.\n\n\nvariates.ContinuousUniform\nContinuous uniform distribution.\n\n\nvariates.Exponential\nExponential distribution.\n\n\nvariates.Normal\nNormal distribution\n\n\nvariates.BoundedNormal\nNormal bounded distribution\n\n\nvariates.RectifiedNormal\nRectified normal distribution\n\n\nvariates.Chisq\n\n\n\nvariates.Student\n\n\n\nvariates.Gamma\nGamma distribution\n\n\nvariates.Beta\nBeta distribution\n\n\nvariates.ExampleDis\n\n\n\n\n\n\n\nsubmodulo de procesos estocásticos\n\n\n\nprocess.WienerProcess\nStandar Wiener process\n\n\nprocess.PoissonProcess\nHomogeneous Poisson process\n\n\nprocess.CompundPoissonProcess\nHomogeneous Poisson process"
  },
  {
    "objectID": "reference/index.html#basics-pseudorandom-functionalities",
    "href": "reference/index.html#basics-pseudorandom-functionalities",
    "title": "sim_2024",
    "section": "",
    "text": "funcionalidades básicas\n\n\n\nrand\n\n\n\nset_seed\nChange state of default pseudorandom generator.\n\n\nrandom_sample\narray subclass to represent a realization of a random process\n\n\nHistogramFigure\ncustom matplotlib Figure to plot a density histogram\n\n\nprocess_path\nrealization of a random process\n\n\nprocess_sample\nsample of process paths\n\n\nPathFigure\ncustom matplotlib Figure to plot a realization from a random process\n\n\nmass_function\nfuncion de masa\n\n\ndensity_function\nfuncion de densidad"
  },
  {
    "objectID": "reference/index.html#pseudorandom-number-generators-prng",
    "href": "reference/index.html#pseudorandom-number-generators-prng",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de generadores de números pseudoaleatorios\n\n\n\ngenerators.multiplicative_congruential_generator\nMultiplicative congruential pseudorandom generator.\n\n\ngenerators.linear_congruential_generator\nLinear congruential pseudorandom generator.\n\n\ngenerators.quadratic_congrential_generator\nQuadratic congruential pseudorandom generators.\n\n\ngenerators.polynomial_congruential_generator\nPolynomial congruential pseudorandom generator.\n\n\ngenerators.multiple_congruential_generator\nMultiple congruential pseudorandom generator\n\n\ngenerators.combined_congruential_generator\nCombined congruential pseudorandom generator.\n\n\ngenerators.multcombi_congruential_generator\nMultiple combined congruential pseudorandom generator\n\n\ngenerators.linear_feedback_shift_register_4\nlinear fedbacl shift register for word size 4\n\n\ngenerators.linear_feedback_shift_register_8\nlinear fedbacl shift register for word size 8\n\n\ngenerators.linear_feedback_shift_register_12\nlinear fedbacl shift register for word size 12\n\n\ngenerators.linear_feedback_shift_register_16\nlinear fedback shift register for word size 16\n\n\ngenerators.linear_feedback_shift_register_20\nlinear fedbacl shift register for word size 20\n\n\ngenerators.linear_feedback_shift_register_24\nlinear fedbacl shift register for word size 24"
  },
  {
    "objectID": "reference/index.html#pruebas-de-aleatoriedad",
    "href": "reference/index.html#pruebas-de-aleatoriedad",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de pruebas de aleatoriedad para PRNG\n\n\n\ntests.mean_est\n\n\n\ntests.mean_test\n\n\n\ntests.variance_est\n\n\n\ntests.variance_test\n\n\n\ntests.chisq_est\n\n\n\ntests.chisq_test\n\n\n\ntests.series_est\n\n\n\ntests.series_test\n\n\n\ntests.runs_est\n\n\n\ntests.runs_test"
  },
  {
    "objectID": "reference/index.html#distribuciones-de-probabilidad",
    "href": "reference/index.html#distribuciones-de-probabilidad",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de distribuciones de probabilidad\n\n\n\nvariates.Bernoulli\nRepresentation of a random variate of Bernoulli type.\n\n\nvariates.Binomial\nrepresentation of a random variate of binonimal type\n\n\nvariates.Geometric\nRepresentation of a random variate of Bernoulli type\n\n\nvariates.NegativeBinomial\nrepresentation of a random variate of Bernoulli type\n\n\nvariates.DiscreteUniform\nDiscrete uniform distribution.\n\n\nvariates.Poisson\nPoisson distribution.\n\n\nvariates.ContinuousUniform\nContinuous uniform distribution.\n\n\nvariates.Exponential\nExponential distribution.\n\n\nvariates.Normal\nNormal distribution\n\n\nvariates.BoundedNormal\nNormal bounded distribution\n\n\nvariates.RectifiedNormal\nRectified normal distribution\n\n\nvariates.Chisq\n\n\n\nvariates.Student\n\n\n\nvariates.Gamma\nGamma distribution\n\n\nvariates.Beta\nBeta distribution\n\n\nvariates.ExampleDis"
  },
  {
    "objectID": "reference/index.html#stochastic-process",
    "href": "reference/index.html#stochastic-process",
    "title": "sim_2024",
    "section": "",
    "text": "submodulo de procesos estocásticos\n\n\n\nprocess.WienerProcess\nStandar Wiener process\n\n\nprocess.PoissonProcess\nHomogeneous Poisson process\n\n\nprocess.CompundPoissonProcess\nHomogeneous Poisson process"
  },
  {
    "objectID": "reference/PathFigure.html",
    "href": "reference/PathFigure.html",
    "title": "PathFigure",
    "section": "",
    "text": "PathFigure\nPathFigure(self, paths, **kwargs)\ncustom matplotlib Figure to plot a realization from a random process",
    "crumbs": [
      "Get started",
      "Main features",
      "`PathFigure`"
    ]
  },
  {
    "objectID": "reference/process.PoissonProcess.html",
    "href": "reference/process.PoissonProcess.html",
    "title": "process.PoissonProcess",
    "section": "",
    "text": "process.PoissonProcess\nprocess.PoissonProcess(self, **kwargs)\nHomogeneous Poisson process",
    "crumbs": [
      "Get started",
      "Stochastic process",
      "`Poisson Process`"
    ]
  },
  {
    "objectID": "reference/process_path.html",
    "href": "reference/process_path.html",
    "title": "process_path",
    "section": "",
    "text": "process_path(self, times, X, type_path, auto=False)\nrealization of a random process\nAn observation over a period of the form [0,T] of a random process is called a realization. Value T is called horizon and is derived at izialitation time. A representation of such realization consist of an array of times and another one with the observed value for each time. Is assumed that both arrays are of the same length and that the value at any index corresponds to time at the same index. A random process can have contiuos or jumps paths, either one can be represneted in this class. Attribute _type is set to continum for contonuos paths and to jump for jumps paths. For both types of paths the attribute _auto must be set to on if the value of the realization at a time not given at inizialization can be derived as the weight average between the two closets times.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ntimes\narray[float] | list[float]\ntimes for wich the process has been observed\nrequired\n\n\nX\narray[float] | list[float]\nvalues for wich the process has been observed\nrequired\n\n\ntype_path\nstr\nthe type of path that the process have, continum or jump.\nrequired\n\n\nauto\nbool\nTreu if the value of the realization at a time not given at inizialization can be derived.\nFalse"
  },
  {
    "objectID": "reference/process_path.html#parameters",
    "href": "reference/process_path.html#parameters",
    "title": "process_path",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\ntimes\narray[float] | list[float]\ntimes for wich the process has been observed\nrequired\n\n\nX\narray[float] | list[float]\nvalues for wich the process has been observed\nrequired\n\n\ntype_path\nstr\nthe type of path that the process have, continum or jump.\nrequired\n\n\nauto\nbool\nTreu if the value of the realization at a time not given at inizialization can be derived.\nFalse"
  },
  {
    "objectID": "reference/rand.html",
    "href": "reference/rand.html",
    "title": "rand",
    "section": "",
    "text": "rand\nrand",
    "crumbs": [
      "Get started",
      "Main features",
      "`rand`"
    ]
  },
  {
    "objectID": "reference/random_sample.html",
    "href": "reference/random_sample.html",
    "title": "random_sample",
    "section": "",
    "text": "random_sample(self, initializer=None)\narray subclass to represent a realization of a random process\nA realization is an indexed set of observations of a random process wich is assumed to be indexed by continum time. The _type attribute is set to continuos if the undarlay process is of continuos paths and to jump if is a jump process. This class also defines some related functions and functionalities.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ninitializer\niterable\nif provided it must be an iterable object whose\nNone",
    "crumbs": [
      "Get started",
      "Main features",
      "`random_sample`"
    ]
  },
  {
    "objectID": "reference/random_sample.html#parameters",
    "href": "reference/random_sample.html#parameters",
    "title": "random_sample",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\ninitializer\niterable\nif provided it must be an iterable object whose\nNone",
    "crumbs": [
      "Get started",
      "Main features",
      "`random_sample`"
    ]
  },
  {
    "objectID": "reference/set_seed.html",
    "href": "reference/set_seed.html",
    "title": "set_seed",
    "section": "",
    "text": "set_seed(seed)\nChange state of default pseudorandom generator.\nThis functions allows to set the state of the default pseudorandom generator for reproductibility porpuses. If seed is not an integer it raise a Warning and no change is done.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nseed\nint\ninteger used to restart the default pseudorandom generator\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`set_seed`"
    ]
  },
  {
    "objectID": "reference/set_seed.html#parameters",
    "href": "reference/set_seed.html#parameters",
    "title": "set_seed",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nseed\nint\ninteger used to restart the default pseudorandom generator\nrequired",
    "crumbs": [
      "Get started",
      "Main features",
      "`set_seed`"
    ]
  },
  {
    "objectID": "reference/tests.chisq_test.html",
    "href": "reference/tests.chisq_test.html",
    "title": "tests.chisq_test",
    "section": "",
    "text": "tests.chisq_test\ntests.chisq_test(sample, k, sig=0.95)"
  },
  {
    "objectID": "reference/tests.mean_test.html",
    "href": "reference/tests.mean_test.html",
    "title": "tests.mean_test",
    "section": "",
    "text": "tests.mean_test\ntests.mean_test(sample, sig=0.95)",
    "crumbs": [
      "Get started",
      "Randomess Test",
      "`mean test`"
    ]
  },
  {
    "objectID": "reference/tests.runs_test.html",
    "href": "reference/tests.runs_test.html",
    "title": "tests.runs_test",
    "section": "",
    "text": "tests.runs_test\ntests.runs_test(sample, sig=0.95)"
  },
  {
    "objectID": "reference/tests.series_test.html",
    "href": "reference/tests.series_test.html",
    "title": "tests.series_test",
    "section": "",
    "text": "tests.series_test\ntests.series_test(sample, l, d, sig=0.95)"
  },
  {
    "objectID": "reference/tests.variance_test.html",
    "href": "reference/tests.variance_test.html",
    "title": "tests.variance_test",
    "section": "",
    "text": "tests.variance_test\ntests.variance_test(sample, sig=0.95)",
    "crumbs": [
      "Get started",
      "Randomess Test",
      "`variance test`"
    ]
  },
  {
    "objectID": "reference/variates.Beta.html",
    "href": "reference/variates.Beta.html",
    "title": "variates.Beta",
    "section": "",
    "text": "variates.Beta\nvariates.Beta(self, **kwargs)\nBeta distribution"
  },
  {
    "objectID": "reference/variates.BoundedNormal.html",
    "href": "reference/variates.BoundedNormal.html",
    "title": "variates.BoundedNormal",
    "section": "",
    "text": "variates.BoundedNormal\nvariates.BoundedNormal(self)\nNormal bounded distribution"
  },
  {
    "objectID": "reference/variates.ContinuousUniform.html",
    "href": "reference/variates.ContinuousUniform.html",
    "title": "variates.ContinuousUniform",
    "section": "",
    "text": "variates.ContinuousUniform(self, **kwargs)\nContinuous uniform distribution.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsup\ntuple\nsupport of distribution.\nrequired"
  },
  {
    "objectID": "reference/variates.ContinuousUniform.html#other-parameters",
    "href": "reference/variates.ContinuousUniform.html#other-parameters",
    "title": "variates.ContinuousUniform",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nsup\ntuple\nsupport of distribution.\nrequired"
  },
  {
    "objectID": "reference/variates.ExampleDis.html",
    "href": "reference/variates.ExampleDis.html",
    "title": "variates.ExampleDis",
    "section": "",
    "text": "variates.ExampleDis\nvariates.ExampleDis()"
  },
  {
    "objectID": "reference/variates.Gamma.html",
    "href": "reference/variates.Gamma.html",
    "title": "variates.Gamma",
    "section": "",
    "text": "variates.Gamma\nvariates.Gamma(self, **kwargs)\nGamma distribution"
  },
  {
    "objectID": "reference/variates.NegativeBinomial.html",
    "href": "reference/variates.NegativeBinomial.html",
    "title": "variates.NegativeBinomial",
    "section": "",
    "text": "variates.NegativeBinomial(self, **kwargs)\nrepresentation of a random variate of Bernoulli type\nRepresentation of random variate include …\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/variates.NegativeBinomial.html#other-parameters",
    "href": "reference/variates.NegativeBinomial.html#other-parameters",
    "title": "variates.NegativeBinomial",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\np\nfloat\nSucess probability\nrequired"
  },
  {
    "objectID": "reference/variates.Poisson.html",
    "href": "reference/variates.Poisson.html",
    "title": "variates.Poisson",
    "section": "",
    "text": "variates.Poisson(self, **kwargs)\nPoisson distribution.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nrate\nfloat\nthe rate associated with the underlaing exponential distribitud arrival process.\nrequired\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.Poisson.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.Poisson.html#other-parameters",
    "href": "reference/variates.Poisson.html#other-parameters",
    "title": "variates.Poisson",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nrate\nfloat\nthe rate associated with the underlaing exponential distribitud arrival process.\nrequired"
  },
  {
    "objectID": "reference/variates.Poisson.html#methods",
    "href": "reference/variates.Poisson.html#methods",
    "title": "variates.Poisson",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nrand\ngeneration of one random number\n\n\n\n\n\nvariates.Poisson.rand()\ngeneration of one random number"
  },
  {
    "objectID": "reference/variates.Student.html",
    "href": "reference/variates.Student.html",
    "title": "variates.Student",
    "section": "",
    "text": "variates.Student\nvariates.Student(self, **kwargs)"
  }
]